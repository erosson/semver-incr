#!/bin/sh
set -eu
BIN="`dirname "$0"`"

SINCE="`$BIN/_current-semver`"
if [ "$SINCE" == "" ]; then
    echo "1.0.0"
    exit 0
fi
STEP="`"$BIN/_messages-since" "$SINCE" | "$BIN/_messages-to-step"`"
if [ "$STEP" != "" ]; then
    "$BIN/_semver-step" "$SINCE" "$STEP"
fi
exit 0

# get commit messages
# TODO: monorepo narrowed paths
# TODO: use stdin instead, for testing
# https://stackoverflow.com/questions/74086312/do-not-show-pgp-signature-in-git-log
# MESSAGES=`git rev-list "$SINCE"..HEAD --no-commit-header --format=%B`
MESSFILE=`mktemp`
git rev-list "$SINCE"..HEAD --format=%B > "$MESSFILE"
# MESSAGES=`git rev-list "$SINCE"..HEAD`

# analyze commit messages for release triggers.
# not very fancy. I bet there are edge cases I'm missing.
step() {
    if grep -q -E '^feat!:|^BREAKING CHANGE:' "$MESSFILE"; then
        echo major
    elif grep -q -E '^feat:' "$MESSFILE"; then
        echo minor
    elif grep -q -E '^fix:' "$MESSFILE"; then
        echo patch
    # else
        # echo none
    fi
}

step

# TODO: increment version, output new version. https://github.com/npm/node-semver#functions
# TODO: create git tag, if enabled (disabled by default, no side effects)
# git tag <version>
# TODO: push git tag, if enabled (disabled by default, no side effects)
# git push <version>

# no npm-push? this tool should be mostly language-agnostic. give the caller the version + exit-code and let them do that. it's not too hard:
# npm version <VERSION> --no-git-tag-version
# npm publish [--dry-run]
# npm version 0.0.0 --no-git-tag-version